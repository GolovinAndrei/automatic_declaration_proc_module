spring.main.banner-mode=off

eureka.client.service-url.defaultZone=@url.eureka@
eureka.instance.metadata-map.module.version=@project.version@

spring.application.name=auto-release
autorelease-enable = true
waiting-for-applied-docs.timeout=1

#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false

server.port=7034
eureka.client.register-with-eureka=true

flk.service.path=@flk2.service.path@

# имя сервиса, с которым связывается feign-client flk-service
flk.service.name=flk2-service

svx.service.path=@svx.service.path@

svx.service.name=registration-service-svx

payment.service.path=@payments.service.path@

payment.service.name=payments-service

artd.service.name =artd-service

artd.service.path =http://localhost:7023

zio.service.name =control-zio-service

zio.service.path =http://localhost:8084

risks.service.name=risks

risks.service.path=@risks.profiles.path@

helper.service.name=helper

helper.service.path=@helper.service.path@

kstp.service.name = kstp

kstp.service.path = @kstp.service.path@
####################################################
#                    Oracle 11x
####################################################
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

spring.datasource.url=@dataSource.urlBase@
spring.datasource.username=@dataSource.username@
spring.datasource.password=@dataSource.password@

# Создание базы данных и таблиц, на основе указанных сущностей
spring.jpa.hibernate.ddl-auto=none

# показывает sql-запросы в отформатированном виде
spring.jpa.properties.hibernate.format_sql=true


# Профиль логгирования для приложения, находящегося в стадии разработки
spring.profiles.active=@activatedProperties@

logging.config=classpath:logger/logback-spring.xml

logging.file.dir=logs/autorelease
logging.file.dir.backup=logs/backup/autorelease
logging.file.name.var=autorelease.log
logging.file.archive.format.name=autorelease.%d{yyyy-MM-dd}.log

# переменные для файлов конфигурации логгера
logging.var.app=**.************.autorelease

api.prefix=/api/**
header.cors.origins.allow=@cors.url@
header.cors.methods.allow=GET, PUT, POST, DELETE, OPTIONS

#Отключение режима Open Session In View (OSIV), который включен по умолчанию
#spring.jpa.open-in-view=false

# интервал запуска сканирований документов, готовых к регистрации (1 секунда = 1000)
delay.fixed.interval=10000

messages.log.not.null=The parameter cannot be null;

url.nased=@url.nased@

swagger.url=http://localhost:7035
swagger.version=1.0.0
swagger.title=Openapi Swagger 3.0.0 \u043c\u043e\u0434\u0443\u043b\u044f\u0020\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e\u0020\u0432\u044b\u043f\u0443\u0441\u043a\u0430
swagger.description=API \u043c\u043e\u0434\u0443\u043b\u044f\u0020\u0430\u0432\u0442\u043e\u0432\u044b\u043f\u0443\u0441\u043a\u0430
swagger.terms-of-service-url=Terms of service
swagger.license=License of APIs
swagger.license-url=API license URL
springdoc.swagger-ui.tagsSorter=alpha